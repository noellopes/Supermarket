@model QualificationListViewModel
@{

    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<div class="card mb-3">
    <div class="card-body">
        <form asp-action="Index" method="get">

            <label for="Employee" class="control-label">Employee Name</label>
            <input name="Employee" type="text" class="form-control" value="@Model.SearchNameEmp" id="Employee" pattern="[A-Za-z ]+" title="Apenas letras" />

            <label for="Department" class="control-label">Department Name</label>
            <input name="Department" type="text" class="form-control" value="@Model.SearchNameDep" id="Department" pattern="[A-Za-z ]+" title="Apenas letras" />

            <label for="Level" class="control-label">Qualification Level</label>
            <input name="Level" type="text" class="form-control" value="@Model.SearchLevel" id="Level" pattern="[1-3]?" title="Please enter a number between 1 and 3." />

            <div class="mt-3">
                <input class="btn btn-primary" type="submit" value="Search" />
                <a class="btn btn-secondary" asp-action="Index">Cancel</a>
            </div>
        </form>
    </div>
</div>

<br />
<br />
<br />

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Qualifications.FirstOrDefault().Employee)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Qualifications.FirstOrDefault().Departments)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Qualifications.FirstOrDefault().Level)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Qualifications) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Employee.Employee_Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Departments.NameDepartments)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Level)
            </td>
            <td>
                <a asp-action="Edit" class="btn btn-warning" asp-route-id="@item.QualificationId">Edit</a> |
                <a asp-action="Details" class="btn btn-info" asp-route-id="@item.QualificationId">Details</a> |
                <a asp-action="Delete" class="btn btn-danger" asp-route-id="@item.QualificationId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<nav aria-label="supermarket">
    <ul class="pagination">
        @if (Model.Pagination.CurrentPage == 1)
        {
            <li class="page-item disabled">
                <a class="page-link" href="#">First</a>
            </li>
        }
        else
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="1">First</a>
            </li>
        }

        @{
            int first = Model.Pagination.CurrentPage - PagingInfo.NUMBER_PAGES_SHOW_BEFORE_AFTER;
            if (first < 1) first = 1;

            int last = Model.Pagination.CurrentPage + PagingInfo.NUMBER_PAGES_SHOW_BEFORE_AFTER;
            if (last > Model.Pagination.TotalPages) last = Model.Pagination.TotalPages;
        }

        @for (int p = first; p <= last; p++)
        {
            @if (p == Model.Pagination.CurrentPage)
            {
                <li class="page-item active" aria-current="page">
                    <a class="page-link" href="#">@p</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@p">@p</a>
                </li>
            }
        }
        @if (Model.Pagination.CurrentPage == Model.Pagination.TotalPages)
        {
            <li class="page-item disabled">
                <a class="page-link" href="#">Last</a>
            </li>
        }
        else
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="@Model.Pagination.TotalPages">Last</a>
            </li>
        }
    </ul>
</nav>