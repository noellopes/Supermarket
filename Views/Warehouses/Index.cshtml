@model WarehouseViewModel

@{
    ViewData["Title"] = "Warehouse";
}

<style>
    body {
        padding: 20px;
        background-color: #f8f9fa; /* Cor de fundo mais clara */
        color: #343a40; /* Cor do texto mais escura */
    }

    h1 {
        color: #007bff; /* Azul Bootstrap */
        margin-top: 20px; /* Margem superior maior */
    }

    .card {
        background-color: #fff; /* Cor de fundo do cartão */
        border: 1px solid rgba(0, 0, 0, 0.125); /* Borda do cartão */
        border-radius: 0.25rem; /* Borda arredondada */
        padding: 20px; /* Espaçamento interno do cartão */
        margin-bottom: 20px; /* Margem inferior do cartão */
    }

    .btn-group a {
        margin-right: 5px; /* Espaçamento à direita entre os botões do grupo */
    }

    .table th,
    .table td {
        background-color: #f8f8f8; /* Cor de fundo alternativa (cinza mais claro) para as células da tabela */
        color: #000; /* Cor do texto na tabela */
        border: none; /* Remove bordas das células da tabela */
    }

    #meuCartao {
        display: block;
    }

    nav[aria-label="Warehouse"] {
        margin-top: 2%;
    }
</style>
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script>
    function toggleCard() {
        var card = document.getElementById('meuCartao');
        card.style.display = card.style.display === 'none' ? 'block' : 'none';
    }

</script>

<div class="card" >
<h1>Warehouse List</h1>
</div>
<div class="card mb-3" id="meuCartao">
    <div class="card-body">
        <form asp-action="Index" method="get">
            <p><strong>Search Warehouse</strong></p>

            <label for="name" class="control-label">Name</label>
            <input name="name" type="search" class="form-control" value="@Model.SearchName" />

            <label for="adress" class="control-label">Adress</label>
            <input name="adress" type="search" class="form-control" value="@Model.SearchAdress" />

            <div class="mt-3">
                <input class="btn btn-primary" type="submit" value="Search" />
                <a class="btn btn-secondary" asp-action="Index">Cancel</a>
            </div>
        </form>
    </div>
</div>

<p>
    <a asp-action="Create" class="btn btn-success">Create New</a>
    <button class="btn btn-primary" onclick="toggleCard()">Hide/Show search</button>
  
</p>
<table class="table-responsive">
    <table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>
                    @Html.DisplayNameFor(model =>model.Warehouse[0].Name)
            </th>
            <th>
                    @Html.DisplayNameFor(model => model.Warehouse[0].Adress)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
            @foreach (var item in Model.Warehouse)
            {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Adress)
            </td>
            <td>
               <div class="btn-group" role="group" aria-label="Actions">
                            <a asp-action="Edit" asp-route-id="@item.WarehouseId" class="btn btn-secondary">Edit</a>
                            <a asp-action="Details" asp-route-id="@item.WarehouseId" class="btn btn-secondary">Details</a>
                            <a asp-action="Delete" asp-route-id="@item.WarehouseId" class="btn btn-danger">Delete</a>
                            <a asp-action="WarehouseProducts" asp-route-warehouseId="@item.WarehouseId" class="btn btn-secondary">View Products</a>
                            <a asp-controller="WarehouseSections" asp-action="Index" asp-route-warehouseId="@item.WarehouseId" class="btn btn-secondary">View Warehouse Sections</a>
                 </div>
            </td>
        </tr>
}
    </tbody>
</table>

    <nav aria-label="warehouse">
        <ul class="pagination">
            @if (Model.PagingInfoProduct.CurrentPage == 1)
            {
                <li class="page-item disabled">
                    <a class="page-link" href="#">First</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="1">First</a>
                </li>
            }

            @{
                int first = Model.PagingInfoProduct.CurrentPage - PagingInfoProduct.NUMBER_PAGES_SHOW_BEFORE_AFTER;
                if (first < 1) first = 1;

                int last = Model.PagingInfoProduct.CurrentPage + PagingInfoProduct.NUMBER_PAGES_SHOW_BEFORE_AFTER;
                if (last > Model.PagingInfoProduct.TotalPages) last = Model.PagingInfoProduct.TotalPages;
            }

            @for (int p = first; p <= last; p++)
            {
                @if (p == Model.PagingInfoProduct.CurrentPage)
                {
                    <li class="page-item active" aria-current="page">
                        <a class="page-link" href="#">@p</a>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-page="@p">@p</a>
                    </li>
                }
            }
            @if (Model.PagingInfoProduct.CurrentPage == Model.PagingInfoProduct.TotalPages)
            {
                <li class="page-item disabled">
                    <a class="page-link" href="#">Last</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@Model.PagingInfoProduct.TotalPages">Last</a>
                </li>
            }
        </ul>
    </nav>
