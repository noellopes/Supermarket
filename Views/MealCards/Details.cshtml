@model MealCardEmployeesViewModel

@{
    ViewData["Title"] = "Details";
    ViewData["Saldo"] = Model.Balance;
    ViewData["Employee"] = Model.EmployeeName;
}

<style>
    .card_saldo {
        width: 18rem;
        border-radius: 10px;
        margin-top: 50px;
        background-color: #f7f8fa;
        border-color: #f7f8fa;
        display: flex;
        justify-content: space-between;
    }

    .button {
        display:inline-flex;
        margin-bottom: -8%;
    }

    .button-text {
        margin-left: 15vh;
        align-items: right;
        text-decoration: none;
    }

    .row-container {
        box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px #f7f8fa;
        border-radius: 10px;
        margin: 15px;
        background-color: #f7f8fa;
        border-color: #f7f8fa;
    }
    .tabela_css{
        margin-top: 50px;
    }
    .row_css{
        background-color: #f7f8fa;
        border-color: #f7f8fa;
    }
</style>


<h1>Cartão Refeição de @ViewData["Employee"]</h1>


<div class="card card_saldo">
    <div class="card-body">
        <div class="button">
            <p class="card-text">Saldo</p>
            @if (User.IsInRole("Cash Register"))
                        {
            <a asp-action="Create" asp-controller="CardMovements" asp-route-MealCardId="@Model.MealCard" class="btn btn-outline-dark button-text btn-sm">Novo Movimento</a>
                        }
        </div>
        <h3>@ViewData["Saldo"]€</h3>
         </div>
</div>


<div class="container tabela_css">
    <div class="row le-hide">

        <div class="col-lg-12">
            <div class="m-0 row p-3">
                <div class="col-sm-12 col-lg-2 p-0 pl-lg-5">
                    <strong>Valor</strong>
                </div>
                <div class="col-sm-12 col-lg-2 p-0 pl-lg-5">
                    <strong>Data</strong>
                </div>
                <div class="col-sm-12 col-lg-2 p-0 pl-lg-5">
                    <strong>Descrição</strong>
                </div>
                <div class="col-sm-12 col-lg-3 p-0 pl-lg-5">
                    <strong>Tipo Movimento</strong>
                </div>
            </div>
        </div>


    </div>
    <div class="row ">
        <div class="col-sm-4 col-lg-12 mt-2 mb-2">
            @foreach (var item in Model.CardMovements)
            {
                <div class="m-1 row row-container p-3">
                    <div class="col-sm-12 col-lg-2 p-0 pl-lg-5">
                        @Html.DisplayFor(modelItem => item.Value)€
                    </div>
                    <div class="col-sm-12 col-lg-2 p-0 pl-lg-5">
                        @Html.DisplayFor(modelItem => item.Movement_Date)
                    </div>
                    <div class="col-sm-12 col-lg-2 p-0 pl-lg-5">
                        @{
                            const int maxLength = 15;
                            var truncatedDescription = item.Description.Length <= maxLength
                            ? item.Description
                            : item.Description.Substring(0, maxLength) + "...";
                        }
                        @truncatedDescription
                    </div>
                    <div class="col-sm-12 col-lg-2 p-0 pl-lg-5">
                        @Html.DisplayFor(modelItem => item.Type)
                    </div>
                    <div class="col-sm-12 col-lg-2 p-0 pl-lg-5">
                        <a asp-action="Details" asp-controller="CardMovements" asp-route-cardMovementId="@item.CardMovementId" class="btn btn-outline-dark button-text btn-sm">Details</a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<nav aria-label="cardmovemets">
    <ul class="pagination">
        @if (Model.CardMovementPagingInfo.CurrentPage == 1)
        {
            <li class="page-item disabled">
                <a class="page-link" href="#">First</a>
            </li>
        }
        else
        {
            <li class="page-item">
                <a class="page-link" asp-action="Details" asp-controller="MealCards" asp-route-id="@Model.MealCard" asp-route-cardMovementPage="1">First</a>
            </li>
        }

        @{
            int first = Model.CardMovementPagingInfo.CurrentPage - PagingInfo.NUMBER_PAGES_SHOW_BEFORE_AFTER;
            if (first < 1) first = 1;

            int last = Model.CardMovementPagingInfo.CurrentPage + PagingInfo.NUMBER_PAGES_SHOW_BEFORE_AFTER;
            if (last > Model.CardMovementPagingInfo.TotalPages) last = Model.CardMovementPagingInfo.TotalPages;
        }

        @for (int p = first; p <= last; p++)
        {
            @if (p == Model.CardMovementPagingInfo.CurrentPage)
            {
                <li class="page-item active" aria-current="page">
                    <a class="page-link" href="#">@p</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Details" asp-controller="MealCards" asp-route-id="@Model.MealCard" asp-route-cardMovementPage="@p">@p</a>
                </li>
            }
        }
        @if (Model.CardMovementPagingInfo.CurrentPage == Model.CardMovementPagingInfo.TotalPages)
        {
            <li class="page-item disabled">
                <a class="page-link" href="#">Last</a>
            </li>
        }
        else
        {
            <li class="page-item">
                <a class="page-link" asp-action="Details" asp-controller="MealCards" asp-route-id="@Model.MealCard" asp-route-cardMovementPage="@Model.CardMovementPagingInfo.TotalPages">Last</a>
            </li>
        }
    </ul>
</nav>
