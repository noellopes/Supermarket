@model MealCardEmployeesViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>MealCard</h1>
<hr />

<div class="card mb-3">
    <div class="card-body">
        <form asp-action="Index" method="get">
            <p><strong>Search Employee</strong></p>

            <label for="Name" class="control-label">Name</label>
            <input name="employee_name" type="search" class="form-control" value="@Model.SearchName" />

            <div class="mt-3">
                <input class="btn btn-primary" type="submit" value="Search" />
                <a class="btn btn-secondary" asp-action="Index">Cancel</a>
                
            </div>
        </form>
    </div>
</div>
<div>
    <a class="btn btn-outline-success" asp-action="Index" asp-route-sOEwithMC="true">Show Employees With MealCard</a>
    <a class="btn btn-outline-danger" asp-action="Index" asp-route-sOEwithoutMC="true">Show Employees Without MealCard</a>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                Employee
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var employee in Model.Employees)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => employee.Employee_Name)
                </td>
                <td>
                    @if (employee.MealCard == null)
                    {
                        <form asp-action="Create" asp-controller="MealCards">
                            <input type="hidden" name="employeeId" value="@employee.EmployeeId" />
                            <button type="submit" class="btn btn-success btn-sm">Create MealCard</button>
                        </form>
                    }
                    else
                    {
                        <a asp-action="Details" asp-controller="MealCards" asp-route-id="@employee.MealCard.MealCardId" class="btn btn-dark btn-sm">View MealCard</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<nav aria-label="employees">
    <ul class="pagination">
        @if (Model.MealCardPagingInfo.CurrentPage == 1)
        {
            <li class="page-item disabled">
                <a class="page-link" href="#">First</a>
            </li>
        }
        else
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-asp-page="1">First</a>
            </li>
        }

        @{
            int first = Model.MealCardPagingInfo.CurrentPage - PagingInfo.NUMBER_PAGES_SHOW_BEFORE_AFTER;
            if (first < 1) first = 1;

            int last = Model.MealCardPagingInfo.CurrentPage + PagingInfo.NUMBER_PAGES_SHOW_BEFORE_AFTER;
            if (last > Model.MealCardPagingInfo.TotalPages) last = Model.MealCardPagingInfo.TotalPages;
        }

        @for (int p = first; p <= last; p++)
        {
            @if (p == Model.MealCardPagingInfo.CurrentPage)
            {
                <li class="page-item active" aria-current="page">
                    <a class="page-link" href="#">@p</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@p" asp-route-sOEwithoutMC="@Model.SOEwithoutMC" asp-route-sOEwithMC="@Model.SOEwithMC">@p</a>
                </li>
            }
        }
        @if (Model.MealCardPagingInfo.CurrentPage == Model.MealCardPagingInfo.TotalPages)
        {
            <li class="page-item disabled">
                <a class="page-link" href="#">Last</a>
            </li>
        }
        else
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="@Model.MealCardPagingInfo.TotalPages">Last</a>
            </li>
        }

    </ul>


</nav>
