@{
    ViewData["Title"] = "Rotative Inventory";
}
<head>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
</head>

<h1>Rotative Inventory</h1>

<form asp-controller="Products" asp-action="RotativeProducts" method="get">
    <div class="form-group">
        <label for="SelectedProductId">Select Product:</label>
        <select name="SelectedProductId" class="form-control">
            <option value="">-- All Products --</option>
            @foreach (var product in ViewData["Products"] as List<Product>)
            {
                <option value="@product.ProductId">@product.Name, @product.Description, @product.Brand?.Name, @product.LastCountDate</option>
            }
            <input type="hidden" name="SelectedStringDate" value="@TempData["SelectedStringDate"]" />
            <input type="hidden" name="SelectedNumber" value="@TempData["SelectedNumber"]" />
            <input type="hidden" name="SelectedPrice" value="@TempData["SelectedPrice"]" />
        </select>
    </div>
    <div style="margin-top: 5px;">
        <button type="submit" class="btn btn-primary">Submit</button>
    </div>
</form>

@if (ViewData["SelectedProduct"] != null)
{
    var selectedProduct = ViewData["SelectedProduct"] as Product;

    <h2>Selected Product: @selectedProduct.Name, @selectedProduct.Description, @selectedProduct.Brand?.Name</h2>

    if (ViewData["WarehouseSectionProductsList"] != null)
    {
        var warehouseSectionProductsList = ViewData["WarehouseSectionProductsList"] as List<WarehouseSection_Product>;

        if (warehouseSectionProductsList.Any())
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Warehouse </th>
                        <th>Warehouse Section</th>
                        <th>Batch Number</th>
                        <th>Quantity</th>
                        <th>Count</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var warehouseSectionProduct in warehouseSectionProductsList)
                    {
                        <tr>
                            <td>@warehouseSectionProduct.WarehouseSection?.Warehouse.Name</td>
                            <td>@warehouseSectionProduct.WarehouseSection?.Description</td>
                            <td>@warehouseSectionProduct.BatchNumber</td>
                            <td>@warehouseSectionProduct.Quantity</td>
                            <td>
                                <input type="number" class="warehouse-quantity" value="@warehouseSectionProduct.Quantity" min="0" max="99999" />
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <h6>Total Warehouse  expected Quantity: @(ViewData["TotalWarehouseQuantity"] ?? 0)</h6>
            <h5>Total Warehouse count Quantity: <span id="totalWarehouseQuantity">0</span></h5>
        }
        else
        {
            <span style="color: red;">No Warehouse Section Products available for the selected product.</span>
        }
    }
    


@if (ViewData["SelftProductsList"] != null)
{
    var selftProductsList = ViewData["SelftProductsList"] as List<Shelft_ProductExhibition>;

    if (selftProductsList.Any())
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Shelf</th>
                    <th>Hallway</th>
                    <th>Store</th>
                    <th>Quantity</th>
                    <th>Count</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var shelftProduct in selftProductsList)
                {
                    <tr>
                        <td>@shelftProduct.Shelf?.Name</td>
                        <td>@shelftProduct.Shelf?.Hallway?.Description</td>
                        <td>@shelftProduct.Shelf?.Hallway?.Store?.Name</td>
                        <td>@shelftProduct.Quantity</td>
                        <td>
                                <input type="number" class="shelf-quantity" value="@shelftProduct.Quantity" min="0" max="99999" />
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <h6>Total Shelf  expected Quantity: @(ViewData["TotalShelfQuantity"] ?? 0)</h6>
        <h5>Total Shelf  count Quantity: <span id="totalShelfQuantity">0</span></h5>

        <h6> Total  expected Quantity: @(ViewData["GrandTotalQuantity"] ?? 0)</h6>
        <h5>Total count Quantity: <span id="totalQuantity">0</span></h5>

     
    }
    else
    {
        <span style="color: red;">No Shelf Products available for the selected product.</span>
    }
}
    <a asp-action="RotativeProducts" asp-route-selectedProductId="@selectedProduct.ProductId" asp-route-isButtonClicked="true">Clique aqui</a>

}



<script>
    // Função para calcular e exibir a soma total da quantidade da prateleira
    function calculateTotalQuantity() {
        var totalWarehouseQuantity = 0;
        var totalShelfQuantity = 0;

        // Iterar sobre as entradas de quantidade do armazém
        $('.warehouse-quantity').each(function () {
            // Obter o valor da entrada
            var quantity = parseInt($(this).val()) || 0;
            // Adicionar ao total
            totalWarehouseQuantity += quantity;
        });

        // Iterar sobre as entradas de quantidade da prateleira
        $('.shelf-quantity').each(function () {
            // Obter o valor da entrada
            var quantity = parseInt($(this).val()) || 0;
            // Adicionar ao total
            totalShelfQuantity += quantity;
        });

        // Calcular o total geral
        var grandTotalQuantity = totalWarehouseQuantity + totalShelfQuantity;

        // Exibir os totais
        $('#totalWarehouseQuantity').text(totalWarehouseQuantity);
        $('#totalShelfQuantity').text(totalShelfQuantity);
        $('#grandTotalQuantity').text(grandTotalQuantity);

        // Exibir a soma total dos dois inputs
        $('#totalQuantity').text(grandTotalQuantity);
    }

    // Chamar a função ao carregar a página
    $(document).ready(function () {
        calculateTotalQuantity();

        // Chamar a função quando o valor da entrada for alterado
        $('.warehouse-quantity, .shelf-quantity').on('input', function () {
            calculateTotalQuantity();
        });



    });
</script>