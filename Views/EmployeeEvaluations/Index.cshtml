@model Supermarket.Models.EmployeeEvaluationListViewModel

@{
    ViewData["Title"] = "Index";
}

@if (TempData["Message"] != null)
{
    <div class="alert alert-success" role="alert">
        <h2>Success</h2>
        <p>@TempData["Message"]</p>
    </div>
}
@if (TempData["MessageError"] != null)
{
    <div class="alert alert-danger" role="alert">
        <h2>Error</h2>
        <p>@TempData["MessageError"]</p>
    </div>
}


<h1>Employee Evaluations</h1>
@if(ViewBag.EmployeeName != null)
{
    <div class="flex-row" id="subtitle">
        <div class="col-md-6"><h4>@ViewBag.EmployeeName</h4></div>
        <div class="col-md-6">
            <h4>Average grade: @ViewBag.AvgGrade</h4>
            <h4>Attendance: @ViewBag.Assiduidade</h4>
        </div>
        
    </div>
    
}
<div class="mb-3">
    <a asp-controller="Employees" asp-action="Index" class="btn btn-outline-warning">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-box-arrow-left" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M6 12.5a.5.5 0 0 0 .5.5h8a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5h-8a.5.5 0 0 0-.5.5v2a.5.5 0 0 1-1 0v-2A1.5 1.5 0 0 1 6.5 2h8A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-8A1.5 1.5 0 0 1 5 12.5v-2a.5.5 0 0 1 1 0z" />
            <path fill-rule="evenodd" d="M.146 8.354a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L1.707 7.5H10.5a.5.5 0 0 1 0 1H1.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3z" />
        </svg> Back
    </a>
</div>


<div class="card mb-3">
    <div class="card-body">
        <form asp-action="Index" method="get">
            <p><strong>Search Evaluations</strong></p>
            <label for="Description" class="control-label">Description</label>
            <input name="Description" type="search" class="form-control" value="@ViewBag.FilterDescription" />

            @if (ViewBag.EmployeeName == null)
            {
                <label for="EmployeeName" class="control-label">Employee</label>
                <input name="EmployeeName" type="search" class="form-control" value="@ViewBag.FilterEmployeeName" />
            }
            else
            {
                <input type="hidden" name="employeeId" value="@ViewBag.EmployeeId" />
            }
            <input class="btn btn-outline-primary" type="submit" value="Search" />
            <a class="btn btn-outline-secondary" asp-action="Index" asp-route-employeeId="@ViewBag.EmployeeId" >Cancel</a>
        </form>
    </div>
</div>
<p>
    <a asp-action="Create" asp-route-employeeId="@ViewBag.EmployeeId" class="btn btn-outline-primary">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person-rolodex" viewBox="0 0 16 16">
            <path d="M8 9.05a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5" />
            <path d="M1 1a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h.5a.5.5 0 0 0 .5-.5.5.5 0 0 1 1 0 .5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5.5.5 0 0 1 1 0 .5.5 0 0 0 .5.5h.5a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1H6.707L6 1.293A1 1 0 0 0 5.293 1zm0 1h4.293L6 2.707A1 1 0 0 0 6.707 3H15v10h-.085a1.5 1.5 0 0 0-2.4-.63C11.885 11.223 10.554 10 8 10c-2.555 0-3.886 1.224-4.514 2.37a1.5 1.5 0 0 0-2.4.63H1z" />
        </svg> Create new employee evaluation
    </a>
</p>
<table class="table table-bordered border-primary">
    <thead>
        <tr>
            @if (ViewBag.EmployeeName == null)
            {
                <th>
                    @Html.DisplayNameFor(model => model.EmployeeEvaluation.First().Employee!.Employee_Name)
                </th>
            }
            <th>
                @Html.DisplayNameFor(model => model.EmployeeEvaluation.First().Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EmployeeEvaluation.First().GradeNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EmployeeEvaluation.First().EvaluationDate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.EmployeeEvaluation) {
        <tr>
            @if (ViewBag.EmployeeName == null)
            {
                <td>
                        <a asp-action="Index" asp-route-employeeId="@item.Employee!.EmployeeId">@Html.DisplayFor(modelItem => item.Employee!.Employee_Name)</a>
                </td>

            }
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GradeNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EvaluationDate)
            </td>
            <td>
                    <a asp-action="Edit" asp-route-id="@item.EmployeeEvaluationId" class="btn btn-warning btn-sm">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.EmployeeEvaluationId" class="btn btn-info btn-sm">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-three-dots" viewBox="0 0 16 16">
                            <path d="M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3m5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3m5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3" />
                        </svg>
                    </a>
            </td>
        </tr>
}
    </tbody>
</table>
@{
    int initialPage = Model.Pagination.CurrentPage - PagingInfo.NUMBER_PAGES_SHOW_BEFORE_AFTER;
    if (initialPage <= 1) initialPage = 1;
    int lastPage = Model.Pagination.CurrentPage + PagingInfo.NUMBER_PAGES_SHOW_BEFORE_AFTER;
    if (lastPage > Model.Pagination.TotalPages) lastPage = Model.Pagination.TotalPages;
    int last = ((int)Model.Pagination.TotalPages);
}

<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        @if (Model.Pagination.CurrentPage > initialPage)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-employeeName="@ViewBag.FilterEmployeeName" asp-route-description="@ViewBag.FilterDescription" asp-route-employeeId="@ViewBag.EmployeeId" asp-route-page="1" aria-label="Previous">
                    <span aria-hidden="true">
                        &laquo
                    </span>
                </a>
            </li>
        }
        @for (int p = initialPage; p <= lastPage; p++)
        {

            if (p == Model.Pagination.CurrentPage)
            {
                <li class="page-item active "><a class="page-link" href="#">@p</a></li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-employeeName="@ViewBag.FilterEmployeeName" asp-route-description="@ViewBag.FilterDescription" asp-route-employeeId="@ViewBag.EmployeeId" asp-route-page="@p">@p</a>
                </li>
            }
        }

        @if (Model.Pagination.CurrentPage < Model.Pagination.TotalPages)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-employeeName="@ViewBag.FilterEmployeeName" asp-route-description="@ViewBag.FilterDescription" asp-route-employeeId="@ViewBag.EmployeeId" asp-route-page="@last" aria-label="Next">
                    <span aria-hidden="true">
                        &raquo
                    </span>
                </a>
            </li>
        }
    </ul>
</nav>
<small style="color:gray" class="pagination justify-content-center"><i>Total count: @Model.Pagination.TotalItems </i></small>

<style>
#subtitle{
    display: flex;
}
</style>