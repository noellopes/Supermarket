@model Supermarket.Models.FuncaoListViewModel


@{
    ViewData["Title"] = "Funcao";
}


  <h3>
    @if (TempData["Mensagem"] != null)
    {
        <div class="alert alert-danger" role="alert">
                @TempData["Mensagem"]
        </div>
    }
    else if(TempData["MensagemPositiva"] != null)
    {
        <div class="alert alert-success" role="alert">
            @TempData["MensagemPositiva"]
        </div>
    }
</h3>
  
<h1>@ViewData["Title"]</h1>


    <div class="row justify-content-start align-items-start">
        <div class="col-3">
            <a asp-action="Create" class="btn btn-outline-primary">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person-rolodex" viewBox="0 0 16 16">
                    <path d="M8 9.05a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5" />
                    <path d="M1 1a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h.5a.5.5 0 0 0 .5-.5.5.5 0 0 1 1 0 .5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5.5.5 0 0 1 1 0 .5.5 0 0 0 .5.5h.5a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1H6.707L6 1.293A1 1 0 0 0 5.293 1zm0 1h4.293L6 2.707A1 1 0 0 0 6.707 3H15v10h-.085a1.5 1.5 0 0 0-2.4-.63C11.885 11.223 10.554 10 8 10c-2.555 0-3.886 1.224-4.514 2.37a1.5 1.5 0 0 0-2.4.63H1z" />
                </svg> Criar nova Funcao 
            </a>
        </div>
    </div>
<div class="card mb-3">
    <div class="card-body">
        <form asp-action="Index" method="get">
            <h4>Search Funcao</h4>
            <label for="DescricaoFuncao" class="control-label">Descrição</label>
            <input name="descricao" type="search" class="form-control" value="@ViewBag.FiltroDescricao" />

            <label for="NomeFuncao" class="control-label">Nome da Função</label>
            <input name="funcao" type="search" class="form-control" value="@ViewBag.FiltroFuncao" />

            <input class="btn btn-outline-primary" type="submit" value="Search" />
            <a class="btn btn-outline-secondary" asp-action="Index">Cancel</a>
        </form>
    </div>
</div>

<table class="table table-bordered border-primary">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.funcao.First().NomeFuncao)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.funcao.First().DescricaoFuncao)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.funcao) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.NomeFuncao)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DescricaoFuncao)
            </td>
            <div class="row justify-content-end">
                <td>
                    <a asp-action="Edit" asp-route-id="@item.FuncaoId" class="btn btn-warning btn-sm">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.FuncaoId" class="btn btn-info btn-sm">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-three-dots" viewBox="0 0 16 16">
                            <path d="M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3m5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3m5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3" />
                        </svg>
                    </a> |
                    <a asp-action="Delete" asp-route-id="@item.FuncaoId" class="btn btn-danger btn-sm">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3-fill" viewBox="0 0 16 16">
                            <path d="M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5m-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5M4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06Zm6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528ZM8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5" />
                        </svg>
                    </a>

                </td>
            </div>    
        </tr>
}
    </tbody>
</table>
@{
    int initialPage = Model.Pagination.CurrentPage - PagingInfo.NUMBER_PAGES_SHOW_BEFORE_AFTER;
    if (initialPage <= 1) initialPage = 1;
    int lastPage = Model.Pagination.CurrentPage + PagingInfo.NUMBER_PAGES_SHOW_BEFORE_AFTER;
    if (lastPage > Model.Pagination.TotalPages) lastPage = Model.Pagination.TotalPages;
    int last = ((int)Model.Pagination.TotalPages) ;
}

<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        @if (!(Model.Pagination.CurrentPage == initialPage))
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="1" asp-route-descricao="@ViewBag.FiltroDescricao"
                   asp-route-funcao="@ViewBag.FiltroFuncao" aria-label="Previous">
                    <span aria-hidden="true">
                        &laquo
                    </span>
                </a>
            </li>
        }
        @for (int p = initialPage; p <= lastPage; p++)
        {
            
            if (p == Model.Pagination.CurrentPage)
            {
                <li class="page-item active "><a class="page-link" href="#">@p</a></li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index"
                       asp-route-descricao="@ViewBag.FiltroDescricao"
                       asp-route-funcao="@ViewBag.FiltroFuncao"
                     asp-route-page="@p">@p</a>
                </li>
            }
        }

        @if (!(Model.Pagination.CurrentPage == Model.Pagination.TotalPages))
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="@last" asp-route-descricao="@ViewBag.FiltroDescricao"
                   asp-route-funcao="@ViewBag.FiltroFuncao" aria-label="Next">
                    <span aria-hidden="true">
                        &raquo 
                    </span>
                </a>
            </li>
        }
    </ul>
</nav>
<small style="color:gray" class="pagination justify-content-center"><i>Total Function @Model.Pagination.TotalItems </i></small>
