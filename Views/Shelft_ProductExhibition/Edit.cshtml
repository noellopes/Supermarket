@model Supermarket.Models.Shelft_ProductExhibition

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>



<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ProductId" />
            <input type="hidden" asp-for="ShelfId" />
            <div class="form-group">
                <label asp-for="ProductId" class="control-label">Product</label>
                <span asp-for="ProductId" class="form-control" readonly> @Model.Product.Name</span>
            </div>

            <div class="form-group">
                <label asp-for="ShelfId" class="control-label">Shelf</label>
                <span asp-for="ShelfId" class="form-control" readonly>@Model.Shelf.Name</span>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MinimumQuantity" class="control-label"></label>
                <input asp-for="MinimumQuantity" class="form-control" />
                <span asp-validation-for="MinimumQuantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
