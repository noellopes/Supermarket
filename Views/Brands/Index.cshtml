@model BrandViewModel
@{
    ViewData["Title"] = "Index";
}
<style>
    body {
        padding: 20px;
        background-color: #f8f9fa; /* Cor de fundo mais clara */
        color: #343a40; /* Cor do texto mais escura */
    }

    h1 {
        color: #007bff; /* Azul Bootstrap */
        margin-top: 20px; /* Margem superior maior */
    }

    .card {
        background-color: #fff; /* Cor de fundo do cartão */
        border: 1px solid rgba(0, 0, 0, 0.125); /* Borda do cartão */
        border-radius: 0.25rem; /* Borda arredondada */
        padding: 20px; /* Espaçamento interno do cartão */
        margin-bottom: 20px; /* Margem inferior do cartão */
    }

    .btn-group a {
        margin-right: 5px; /* Espaçamento à direita entre os botões do grupo */
    }

    .table th,
    .table td {
        background-color: #f8f8f8; /* Cor de fundo alternativa (cinza mais claro) para as células da tabela */
        color: #000; /* Cor do texto na tabela */
        border: none; /* Remove bordas das células da tabela */
    }
</style>

<div class="card">
    <h1>Index</h1>
    <p class="card-text">Total Categories: @ViewBag.totalBrands</p>
</div>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>
<div>
    <table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Brands[0].Name)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Brands) {
        <tr>
            <td class="col-8">
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td class="col-3">
                        <a asp-action="Edit" asp-route-id="@item.BrandId" class="btn btn-secondary">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.BrandId" class="btn btn-secondary">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.BrandId" class="btn btn-danger">Delete</a>
            </td>
        </tr>
}
    </tbody>
    </table>
</div>

<nav aria-label="books">
    <ul class="pagination">
        @if (Model.PagingInfoProduct.CurrentPage == 1)
        {
            <li class="page-item disabled">
                <a class="page-link" href="#">First</a>
            </li>
        }
        else
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="1">First</a>
            </li>
        }

        @{
            int first = Model.PagingInfoProduct.CurrentPage - PagingInfoProduct.NUMBER_PAGES_SHOW_BEFORE_AFTER;
            if (first < 1) first = 1;

            int last = Model.PagingInfoProduct.CurrentPage + PagingInfoProduct.NUMBER_PAGES_SHOW_BEFORE_AFTER;
            if (last > Model.PagingInfoProduct.TotalPages) last = Model.PagingInfoProduct.TotalPages;
        }

        @for (int p = first; p <= last; p++)
        {
            @if (p == Model.PagingInfoProduct.CurrentPage)
            {
                <li class="page-item active" aria-current="page">
                    <a class="page-link" href="#">@p</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@p">@p</a>
                </li>
            }
        }
        @if (Model.PagingInfoProduct.CurrentPage == Model.PagingInfoProduct.TotalPages)
        {
            <li class="page-item disabled">
                <a class="page-link" href="#">Last</a>
            </li>
        }
        else
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="@Model.PagingInfoProduct.TotalPages">Last</a>
            </li>
        }
    </ul>
</nav>
