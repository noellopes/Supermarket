@model ReserveDepartmentViewModel

@{
    ViewData["Title"] = "Reserve Departments";
}

<h1>@ViewData["Title"]</h1>

<div class="card mb-3">
    <div class="card-body">
        <form asp-action="Index" method="get">
            <p><strong>Search reserve departments</strong></p>

            <label for="employeeName" class="control-label">Employee Name</label>
            <input name="employeeName" type="search" class="form-control" value="@Model.SearchEmployeeName" />

            <label for="reserveId" class="control-label">Reserve Id</label>
            <input name="reserveId" type="search" class="form-control" value="@Model.SearchReserveId" />

            <label for="numeroFunc" class="control-label">Number of funcionaries</label>
            <input name="numeroFunc" type="search" class="form-control" value="@Model.SearchNumeroFunc" />

            <div class="mt-3">
                <input class="btn btn-primary" type="submit" value="Search" />
                <a class="btn btn-secondary" asp-action="Index">Cancel</a>
            </div>
        </form>
    </div>
</div>
<div>
    <a asp-action="Create" class="btn btn-success btn-sm">Create New</a>
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ReserveDepartment.FirstOrDefault().Reserve.ReserveId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReserveDepartment.FirstOrDefault().Employee.Employee_Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReserveDepartment.FirstOrDefault().NumeroDeFunc)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.ReserveDepartment)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Reserve.ReserveId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Employee.Employee_Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NumeroDeFunc)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.ReserveId" class="btn btn-info btn-sm">Details</a> |
                    <a asp-action="Edit" asp-route-id="@item.ReserveId" class="btn btn-warning btn-sm">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@item.ReserveId" class="btn btn-danger btn-sm">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    @{
        var pagingInfo = Model.PagingInfo;
        var prevPage = pagingInfo.CurrentPage - 1;
        var nextPage = pagingInfo.CurrentPage + 1;

        if (prevPage > 0)
        {
            <a asp-action="Index" asp-route-page="@prevPage" asp-route-employeeName="@Model.SearchEmployeeName">Previous</a>
        }

        for (var i = Math.Max(1, pagingInfo.CurrentPage - PagingInfo.NUMBER_PAGES_SHOW_BEFORE_AFTER); i <= Math.Min(pagingInfo.TotalPages, pagingInfo.CurrentPage + PagingInfo.NUMBER_PAGES_SHOW_BEFORE_AFTER); i++)
        {
            <a asp-action="Index" asp-route-page="@i" asp-route-employeeName="@Model.SearchEmployeeName" class="@(i == pagingInfo.CurrentPage ? "current-page" : "")">@i</a>
        }

        if (nextPage <= pagingInfo.TotalPages)
        {
            <a asp-action="Index" asp-route-page="@nextPage" asp-route-employeeName="@Model.SearchEmployeeName">Next</a>
        }
    }
</div>
