@using Supermarket.Models
@model AfluenciasViewModel
@{
    ViewData["Title"] = "Afluencias";
}

<h1>Afluencias</h1>



<form asp-action="Afluencias" method="get">
    <p><strong>Search dates</strong></p>

    <label for="dataEmissao" class="control-label">Data Inicial</label>
    <input type="datetime-local" class="form-control" value="@Model.SearchDataIntervaloInicial" />
   
    <label for="dataEmissao" class="control-label">Data Final</label>
    <input type="datetime-local" class="form-control" value="@Model.SearchDataIntervaloFinal" />

 

    <div class="mt-3">
        <input class="btn btn-primary" type="submit" value="Search" />
        <a class="btn btn-secondary" asp-action="Afluencias">Cancel</a>
    </div>
</form>
<div class="accordion" id="accordionExample">
@foreach (var item in Model.DepartmentsList)
{
        <div class="accordion-item">
            <h2 class="accordion-header" id="headingOne">
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                    @item.NameDepartments
                </button>
            </h2>
            <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
                <div class="accordion-body">
                    <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                </div>
            </div>
        </div>
}
    
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                Data de Emissão
            </th>
            <th>
                Data de Atendimento
            </th>
            <th>
                Número da Senha
            </th>
            <th>
                Estado
            </th>
            <th>
                Prioritário
            </th>
            <th>
                ID do Departamento
            </th>
            

        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model.Tickets)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.DataEmissao)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DataAtendimento)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumeroDaSenha)
            </td>
            <td>
                    @(item.Estado ? "Atendido" : "Não atendido")
            </td>
            <td>
                    @(item.Prioritario ? "Sim" : "Não")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IDDepartments)
            </td>
            
        </tr>
}
    </tbody>
    </table>
<a class="btn btn-secondary" asp-area="Schedules" asp-action="Index">Voltar atrás</a>