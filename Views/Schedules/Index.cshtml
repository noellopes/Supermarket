@using Supermarket.Models
@* @model IEnumerable<Schedule> *@
@model SchedulesViewModel


<img class="position-relative start-50 translate-middle-x" src="~/images/banner.png" />

@{
    ViewData["Title"] = "Index";
}

@* <h1>Index</h1> *@
@if (ViewBag.Message != null)
{
    <div class="alert alert-success" role="alert">
        <h4 class="alert-heading">Success</h4>
        <p>@ViewBag.Message</p>
    </div>
}



<div class="card">
    <div class="card-body">
        <form asp-action="Index" method="get">
            <p><strong>Search schedules</strong></p>

           

            <div class="form-group">
               

                <select id="selectedDepartment" name="departmentDrop"
                        asp-items="@(new SelectList(Model.Departments, "IDDepartments", "NameDepartments"))"
                        class="form-control">
                    <option value="0">-- All Departments --</option>
                </select>
            </div>

            <div class="mt-3">
                <input class="btn btn-primary" type="submit" value="Search" />
                <a class="btn btn-secondary" asp-action="Index">Cancel</a>
            </div>
        </form>
    </div>
</div>
<hr />

<a class="btn btn-primary" asp-action="Create">Create New Schedule</a>


<div class="row">

    @foreach (var item in Model.Schedules)
    {
        Console.WriteLine($"Schedule ID: {item.ScheduleId}");
        Console.WriteLine($"Department ID: {item.IDDepartments}");
        <div class="col mt-3">
            <div class="card text-center" style="width: 18rem;">
                @* <img class="card-img-top" src="..." alt="Card image cap">*@
                <div class="card-body">
                    <h5 class="card-title">Horário @Html.DisplayFor(modelItem => item.ScheduleId) </h5>
                    <p>Departamento</p>
                    @if (item.IDDepartments == 0)
                    {

                        <p class="card-text">Sem departamento</p>
                    }
                    else if (item.Departments != null)
                    {
                        
                        <p class="card-text">@item.Departments.NameDepartments</p>
                    }
                    @* <p class="card-text">@Html.DisplayFor(modelItem => item.Departments.NameDepartments)</p> *@
                </div>
                <ul class="list-group list-group-flush">
                    @{
                        string Data = item.StartDate.ToString("dd/MM/yyyy");
                        <li class="list-group-item"> Data em que entra em vigor: <p>@Html.DisplayFor(modelItem => Data)</p></li>
                        }
                    <li class="list-group-item">
                        Data em que termina:
                        @*@Html.DisplayFor(modelItem => item.EndDate??.ToString("dd/MM/yyyy"))*@
                        @{
                            if (item.EndDate.HasValue==false)
                            {
                                <p>Indeterminado</p>
                            } else
                            {
                                <p>@item.EndDate.Value.ToString("dd/MM/yyyy")</p>
                            }
                        }
                        
                    </li>
                    <li class="list-group-item">Hora de começo diário: <p>@item.DailyStartTime.ToString("hh:mm")</p> </li>
                    <li class="list-group-item">Hora de término diário: <p>@item.DailyFinishTime.ToString("hh:mm")</p> </li>
                </ul>
                <div class="card-body">
                    <a asp-action="Edit" asp-route-id="@item.ScheduleId" class="card-link">Edit</a>
                    <a asp-action="Details" asp-route-id="@item.ScheduleId" class="card-link">Details</a>
                    <a asp-action="Delete" asp-route-id="@item.ScheduleId" class="card-link">Delete</a>
                </div>
            </div>
        </div>

    }
</div>
<nav aria-label="schedules" class="mt-5">
    <ul class="pagination">
        @if (Model.PagingInfo.CurrentPage == 1)
        {
            <li class="page-item disabled">
                <a class="page-link" href="#">First</a>
            </li>
        }
        else
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="1" asp-route-departmentDrop="@Model.SearchDepartment">First</a>
            </li>
        }

        @{
            int first = Model.PagingInfo.CurrentPage - PagingInfo.NUMBER_PAGES_SHOW_BEFORE_AFTER;
            if (first < 1) first = 1;

            int last = Model.PagingInfo.CurrentPage + PagingInfo.NUMBER_PAGES_SHOW_BEFORE_AFTER;
            if (last > Model.PagingInfo.TotalPages) last = Model.PagingInfo.TotalPages;
        }

        @for (int p = first; p <= last; p++)
        {
            @if (p == Model.PagingInfo.CurrentPage)
            {
                <li class="page-item active" aria-current="page">
                    <a class="page-link" href="#">@p</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@p" asp-route-departmentDrop="@Model.SearchDepartment">@p</a>
                </li>
            }
        }
        @if (Model.PagingInfo.CurrentPage == Model.PagingInfo.TotalPages)
        {
            <li class="page-item disabled">
                <a class="page-link" href="#">Last</a>
            </li>
        }
        else
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="@Model.PagingInfo.TotalPages" asp-route-departmentDrop="@Model.SearchDepartment">Last</a>
            </li>
        }
    </ul>
</nav>
<hr class="mt-5" />
<h1> Função de Cálculo de Pico de Afluência</h1>
